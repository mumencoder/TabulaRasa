version: '3.1'

services:
  # The DB service
  db:
    image: mariadb
    restart: always
    environment:
      MYSQL_USER: xiuser
      MYSQL_PASSWORD: xipassword
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: xidb
    networks:
      - lsb
      - web
    # Run all the .sql files in the /sql directory to initalize the DB. This only hapens the first time this service is started and will not handle additions/modifications
    volumes:
      - ./sql:/docker-entrypoint-initdb.d
      - /media/dream/lsb-database:/var/lib/mysql
    ports:
      - "3306:3306"

  # The server service
  ffxi_server_main:
    # Build whatever is in the Dockerfile in the server root folder
    build: .
    image: ffxi_server
    working_dir: /lsb-build
#   working_dir: /lsb-src
    environment:
      XI_BINARY_DIR: /lsb-build
#     XI_BINARY_DIR: /lsb-src
      PYTHONUNBUFFERED: 1
      XI_NETWORK_MAP_HOST: "${HOST_EXTERNAL_IP}"
    command: > 
      /bin/bash -c 'cmake -S/lsb-src -B/lsb-build && cd /lsb-build && make -j 8 && python3 ./tools/docker/launch_lobby.py'
    depends_on:
      - db
      - broker
    networks:
      - lsb
      - web
    volumes:
      - /media/dream/lsb-build:/lsb-build
    ports:
      - "54231:54231/tcp"
      - "54230:54230/tcp"
      - "54001:54001/tcp"
      - "54002:54002/tcp"

  ffxi_server_map1:
    depends_on:
      - ffxi_server_main
    image: ffxi_server
    working_dir: /lsb-build
#   working_dir: /lsb-src
    environment:
      XI_BINARY_DIR: /lsb-build
#     XI_BINARY_DIR: /lsb-src
      PYTHONUNBUFFERED: 1
      XI_NETWORK_MAP_HOST: "${HOST_EXTERNAL_IP}"
      XI_NETWORK_MAP_PORTS: 22220,22221,22222,22223
    command: >
      /bin/bash -c 'dockerize --wait tcp://ffxi_server_main:54001 --timeout 2h -wait-retry-interval 20s && python3 ./tools/docker/launch_map.py'
    networks:
      - lsb
      - web
    ports:
      - "22220:22220/udp"
      - "22221:22221/udp"
      - "22222:22222/udp"
      - "22223:22223/udp"
    volumes:
      - /media/dream/lsb-build:/lsb-build

  ffxi_server_map2:
    depends_on:
      - ffxi_server_main
    image: ffxi_server
    working_dir: /lsb-build
#   working_dir: /lsb-src
    environment:
      XI_BINARY_DIR: /lsb-build
#     XI_BINARY_DIR: /lsb-src
      PYTHONUNBUFFERED: 1
      XI_NETWORK_MAP_HOST: "${HOST_EXTERNAL_IP}"
      XI_NETWORK_MAP_PORTS: 22230,22231,22232,22233
    command: >
      /bin/bash -c 'dockerize --wait tcp://ffxi_server_main:54001 --timeout 2h -wait-retry-interval 20s && python3 ./tools/docker/launch_map.py'
    networks:
      - lsb
      - web
    ports:
      - "22230:22230/udp"
      - "22231:22231/udp"
      - "22232:22232/udp"
      - "22233:22233/udp"
    volumes:
      - /media/dream/lsb-build:/lsb-build

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.0
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - lsb
      - web
    logging:
      driver: "none"

  broker:
    image: confluentinc/cp-kafka:7.0.0
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://${HOST_EXTERNAL_IP}:9092,PLAINTEXT_INTERNAL://broker:29092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "packets-in:1:2,packets-out:1:2"
      LOG4J_LOGGER_KAFKA: WARN
    networks:
      - lsb
      - web
    logging:
      driver: "none"

  hivemind_zoo:
    image: zookeeper
    restart: always
    hostname: hivemind_zoo
    ports:
      - 2182:2182
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zoo1:2888:3888;2182
    networks:
      - lsb
      - web

networks:
  lsb:
    external: false
  web:
    external: true
